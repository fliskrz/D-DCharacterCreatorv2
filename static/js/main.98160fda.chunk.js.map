{"version":3,"sources":["components/App.js","serviceWorker.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setName","e","preventDefault","currentTarget","innerHTML","concat","state","name","nameChange","setState","value","chooseClass","myClass","clas","chooseRace","myRace","race","classes","races","getClass","axios","get","then","res","data","results","map","i","react_default","a","createElement","onClick","key","getRace","className","onSubmit","onChange","type","style","display","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.98160fda.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../index.css';\r\nimport axios from 'axios';\r\nimport { runInThisContext } from 'vm';\r\n\r\nclass App extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            classes:'',\r\n            races: '',\r\n            chooseClass: false,\r\n            chooseRace: false,\r\n            race:' ',\r\n            name:' ',\r\n            clas:' '\r\n        }\r\n\r\n        this.getClass = (() =>\r\n        axios.get(`http://www.dnd5eapi.co/api/classes/`)\r\n        .then((res) => {\r\n            this.setState({\r\n                classes: res.data.results.map((e,i) => <button onClick={this.myClass} key={i}>{e.name}</button>)\r\n            })\r\n        }))()\r\n\r\n        this.getRace = (() =>\r\n        axios.get(`http://www.dnd5eapi.co/api/races/`)\r\n        .then((res) => {\r\n            this.setState({\r\n                races: res.data.results.map((e,i) => <button onClick={this.myRace} key={i}>{e.name}</button>)\r\n            })\r\n        }))()\r\n    }\r\n\r\n    setName = (e) => {\r\n        e.preventDefault();\r\n        e.currentTarget.innerHTML = `<h1>${this.state.name}</h1>`;\r\n    }\r\n\r\n    nameChange = (e) => {\r\n        this.setState({\r\n            name: e.currentTarget.value\r\n        })\r\n    }\r\n\r\n    chooseClass = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            chooseClass:true\r\n        })\r\n    }\r\n\r\n    myClass = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            clas: e.currentTarget.innerHTML,\r\n            chooseClass: false\r\n        })\r\n    }\r\n\r\n    chooseRace = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            chooseRace:true\r\n        })\r\n    }\r\n\r\n    myRace = (e) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            race: e.currentTarget.innerHTML,\r\n            chooseRace: false\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='main'>\r\n                {this.state.chooseClass ? \r\n                <div>\r\n                    {this.state.classes}\r\n                </div> :\r\n                    this.state.chooseRace ? \r\n                    <div>\r\n                        {this.state.races}\r\n                    </div>  :\r\n\r\n                <div className='container'>\r\n                <div className='header'>\r\n                    <form onSubmit={this.setName} className='name'>\r\n                        <label>Enter Character Name</label>\r\n                        <div>\r\n                            <input onChange={this.nameChange} value={this.state.name} type='text' name='name'></input>\r\n                            <button>Choose Name</button>\r\n                        </div>\r\n                    </form>\r\n                    <div className='race'>\r\n                        <div className='row'><span>Class: {this.state.clas} <button onClick={this.chooseClass}>Choose Class</button></span><span>Background</span><span>Player</span></div>\r\n                        <div className='row'><span>Race: {this.state.race} <button onClick={this.chooseRace}>Choose Race</button></span><span>Alignment</span><span>Exp</span></div>\r\n                    </div>\r\n                </div>\r\n                <div className='data'>\r\n                    <div className='col'>\r\n                        <div className='skills'>\r\n                            <div className='attributes'>\r\n                                <ul>\r\n                                    <li>\r\n                                        <span>Str</span>\r\n                                        <span>18</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <span>Dex</span>\r\n                                        <span>18</span>\r\n                                    </li><li>\r\n                                        <span>Const</span>\r\n                                        <span>18</span>\r\n                                    </li><li>\r\n                                        <span>Int</span>\r\n                                        <span>18</span>\r\n                                    </li><li>\r\n                                        <span>Wis</span>\r\n                                        <span>18</span>\r\n                                    </li><li>\r\n                                        <span>Char</span>\r\n                                        <span>18</span>\r\n                                    </li>\r\n                                </ul>\r\n                            </div>\r\n                            <div className='abilities'>\r\n                                <ul>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                    <li>x</li>\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                        <div className='lang'>\r\n                            <ul>\r\n                                <li>Common</li>\r\n                                <li>Elvish</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <div className='defense'>\r\n                            <div style={{display:'flex'}}>\r\n                                <div>Armor Class</div>\r\n                                <div>Initiative</div>\r\n                                <div>Speed</div>\r\n                            </div>\r\n                            <div>Current HP</div>\r\n                            <div>Temporary HP</div>\r\n                            <div style={{display:'flex'}}>\r\n                                <div>Hit dice</div>\r\n                                <div>Death Saves</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className='attack'>jakieś tam ataki</div>\r\n                        <div className='items'>miecze i łuki</div>\r\n                    </div>\r\n                    <div className='col'>\r\n                        <div className='personality'>\r\n                            <ul>\r\n                                <li>Personality Traits</li>\r\n                                <li>Ideals</li>\r\n                                <li>Bonds</li>\r\n                                <li>Flaws</li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className='features'>cośtam cośtam</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n                }\r\n\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}